[{"/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/QueryPage/index.js":"1","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/UsersList.js":"2","/Users/ss/Desktop/work/gql-tech-talk-client/src/index.js":"3","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Form.js":"4","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/CreatePostForm.js":"5","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getPost.js":"6","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/login.js":"7","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Login.js":"8","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/index.js":"9","/Users/ss/Desktop/work/gql-tech-talk-client/src/App.js":"10","/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/MutationsPage/index.js":"11","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/GetUserForm.js":"12","/Users/ss/Desktop/work/gql-tech-talk-client/src/reportWebVitals.js":"13","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getUser.js":"14","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/PostPreview.js":"15","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Post.js":"16","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Header.js":"17","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/createUser.js":"18","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/createPost.js":"19","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getUserByToken.js":"20"},{"size":1307,"mtime":1610454486214,"results":"21","hashOfConfig":"22"},{"size":707,"mtime":1610448711071,"results":"23","hashOfConfig":"22"},{"size":500,"mtime":1609831470539,"results":"24","hashOfConfig":"22"},{"size":1169,"mtime":1610449226046,"results":"25","hashOfConfig":"22"},{"size":1282,"mtime":1610449221250,"results":"26","hashOfConfig":"22"},{"size":168,"mtime":1610448728534,"results":"27","hashOfConfig":"22"},{"size":176,"mtime":1609935622696,"results":"28","hashOfConfig":"22"},{"size":1297,"mtime":1610109837153,"results":"29","hashOfConfig":"22"},{"size":215,"mtime":1610448715883,"results":"30","hashOfConfig":"22"},{"size":685,"mtime":1609948318499,"results":"31","hashOfConfig":"22"},{"size":783,"mtime":1610448912173,"results":"32","hashOfConfig":"22"},{"size":1222,"mtime":1610452447132,"results":"33","hashOfConfig":"22"},{"size":362,"mtime":1609831470539,"results":"34","hashOfConfig":"22"},{"size":198,"mtime":1610448742879,"results":"35","hashOfConfig":"22"},{"size":234,"mtime":1610448760738,"results":"36","hashOfConfig":"22"},{"size":184,"mtime":1610448730208,"results":"37","hashOfConfig":"22"},{"size":651,"mtime":1610448694794,"results":"38","hashOfConfig":"22"},{"size":277,"mtime":1610448726674,"results":"39","hashOfConfig":"22"},{"size":227,"mtime":1610448724313,"results":"40","hashOfConfig":"22"},{"size":188,"mtime":1610448744672,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13z0cbc",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/QueryPage/index.js",["88"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/UsersList.js",["89"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { GET_USERS } from \"../graphql/actions/getUsers\";\n\nconst UsersList = ({ setUser, selectedUser }) => {\n  const { loading, error, data } = useQuery(GET_USERS, {\n    variables: { limit: 2 },\n  });\n\n  if (loading) return <p>Loading...</p>;\n\n  return (\n    <div className=\"usersWrapper\">\n      {data.getUsers.map(({ name, id }) => {\n        return (\n          <div\n            onClick={() => setUser(name)}\n            className={selectedUser === name ? \"userCard selected\" : \"userCard\"}\n          >\n            <p>{name}</p>\n            <p>{id}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UsersList;\n","/Users/ss/Desktop/work/gql-tech-talk-client/src/index.js",[],["90","91"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Form.js",["92"],"import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { CREATE_USER_AND_LOGIN } from \"../graphql/actions/createUser\";\n\nconst Form = () => {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [createUser] = useMutation(CREATE_USER_AND_LOGIN);\n\n  const handleSubmiit = async (name, password) => {\n    const response = await createUser({\n      variables: { name: name, password: password },\n    });\n    if (response.data.login) {\n      localStorage.setItem(\"@gql-demo-token\", response.data.login);\n      window.location.reload();\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <input\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        placeholder=\"Name\"\n        type=\"text\"\n      />\n      <input\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        placeholder=\"Password\"\n        type=\"password\"\n      />\n      <button\n        onClick={() => handleSubmiit(name, password)}\n        className=\"appButton\"\n      >\n        Create user\n      </button>\n    </div>\n  );\n};\n\nexport default Form;\n","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/CreatePostForm.js",["93","94","95"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getPost.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/login.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Login.js",["96","97","98"],"import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { LOGIN_USER } from \"../graphql/actions/login.js\";\n\nconst useForceUpdate = () => useState()[1];\n\nconst LoginForm = () => {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginUser, { client }] = useMutation(LOGIN_USER);\n  const forceUpdate = useForceUpdate();\n\n  const handleClick = async (name, password) => {\n    const response = await loginUser({\n      variables: { name: name, password: password },\n    });\n    if (response.data.login) {\n      console.log(\"Token : \", response.data.login);\n      localStorage.setItem(\"@gql-demo-token\", response.data.login);\n      window.location.reload();\n    } else {\n      console.log(\"UNATHORIZED\");\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <input\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        placeholder=\"Name\"\n      />\n      <input\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        placeholder=\"Password\"\n        type=\"Password\"\n      />\n      <button onClick={() => handleClick(name, password)} className=\"appButton\">\n        Log in\n      </button>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/index.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/App.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/MutationsPage/index.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/GetUserForm.js",["99","100"],"import React, { useEffect } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\n\nimport { GET_USER } from \"../graphql/actions/getUser\";\nimport PostPreview from \"../Components/PostPreview\";\n\nconst GetUser = ({ selectedUser, selectPost }) => {\n  const [getUser, { loading, error, data }] = useLazyQuery(GET_USER);\n\n  useEffect(() => {\n    if (selectedUser === null) {\n      console.log(\"NO USER SELECTED\");\n    } else if (selectedUser) {\n      getUser({ variables: { name: selectedUser } });\n    }\n  }, [selectedUser]);\n\n  const handleSelect = (title, id) => {\n    selectPost({ title, id });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"postsWrap\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"postsWrap\">\n      {data ? (\n        data.getUser.posts.length ? (\n          data.getUser.posts.map(({ title, id }) => (\n            <PostPreview\n              key={id}\n              id={id}\n              title={title}\n              handleSelect={handleSelect}\n            />\n          ))\n        ) : (\n          <p>This user dont have posts</p>\n        )\n      ) : (\n        <h1>Please select user to see posts</h1>\n      )}\n    </div>\n  );\n};\n\nexport default GetUser;\n","/Users/ss/Desktop/work/gql-tech-talk-client/src/reportWebVitals.js",[],["101","102"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getUser.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/PostPreview.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Post.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Header.js",["103","104"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/createUser.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/createPost.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getUserByToken.js",[],{"ruleId":"105","severity":1,"message":"106","line":14,"column":26,"nodeType":"107","messageId":"108","endLine":14,"endColumn":32},{"ruleId":"105","severity":1,"message":"109","line":7,"column":20,"nodeType":"107","messageId":"108","endLine":7,"endColumn":25},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"105","severity":1,"message":"114","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"114","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"115","line":9,"column":24,"nodeType":"107","messageId":"108","endLine":9,"endColumn":30},{"ruleId":"105","severity":1,"message":"116","line":14,"column":13,"nodeType":"107","messageId":"108","endLine":14,"endColumn":21},{"ruleId":"105","severity":1,"message":"114","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"115","line":11,"column":23,"nodeType":"107","messageId":"108","endLine":11,"endColumn":29},{"ruleId":"105","severity":1,"message":"117","line":12,"column":9,"nodeType":"107","messageId":"108","endLine":12,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":8,"column":30,"nodeType":"107","messageId":"108","endLine":8,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":16,"column":6,"nodeType":"120","endLine":16,"endColumn":20,"suggestions":"121"},{"ruleId":"110","replacedBy":"122"},{"ruleId":"112","replacedBy":"123"},{"ruleId":"105","severity":1,"message":"114","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":8,"column":20,"nodeType":"107","messageId":"108","endLine":8,"endColumn":25},"no-unused-vars","'called' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'useEffect' is defined but never used.","'client' is assigned a value but never used.","'response' is assigned a value but never used.","'forceUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["126"],["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [getUser, selectedUser]",{"range":"129","text":"130"},[510,524],"[getUser, selectedUser]"]