[{"/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/QueryPage/index.js":"1","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/UsersList.js":"2","/Users/ss/Desktop/work/gql-tech-talk-client/src/index.js":"3","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Form.js":"4","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/CreatePostForm.js":"5","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getPost.js":"6","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/login.js":"7","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Login.js":"8","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/index.js":"9","/Users/ss/Desktop/work/gql-tech-talk-client/src/App.js":"10","/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/MutationsPage/index.js":"11","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/GetUserForm.js":"12","/Users/ss/Desktop/work/gql-tech-talk-client/src/reportWebVitals.js":"13","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getUser.js":"14","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/PostPreview.js":"15","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Post.js":"16","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Header.js":"17","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/createUser.js":"18"},{"size":1398,"mtime":1610370695774,"results":"19","hashOfConfig":"20"},{"size":722,"mtime":1610116130824,"results":"21","hashOfConfig":"20"},{"size":500,"mtime":1609831470539,"results":"22","hashOfConfig":"20"},{"size":1224,"mtime":1610363434601,"results":"23","hashOfConfig":"20"},{"size":1340,"mtime":1610110225834,"results":"24","hashOfConfig":"20"},{"size":168,"mtime":1610114370505,"results":"25","hashOfConfig":"20"},{"size":176,"mtime":1609935622696,"results":"26","hashOfConfig":"20"},{"size":1297,"mtime":1610109837153,"results":"27","hashOfConfig":"20"},{"size":215,"mtime":1610370787461,"results":"28","hashOfConfig":"20"},{"size":685,"mtime":1609948318499,"results":"29","hashOfConfig":"20"},{"size":811,"mtime":1610368602372,"results":"30","hashOfConfig":"20"},{"size":1134,"mtime":1610368643589,"results":"31","hashOfConfig":"20"},{"size":362,"mtime":1609831470539,"results":"32","hashOfConfig":"20"},{"size":198,"mtime":1610356718666,"results":"33","hashOfConfig":"20"},{"size":243,"mtime":1610355559762,"results":"34","hashOfConfig":"20"},{"size":184,"mtime":1610356184906,"results":"35","hashOfConfig":"20"},{"size":720,"mtime":1610359322660,"results":"36","hashOfConfig":"20"},{"size":277,"mtime":1610361624364,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13z0cbc",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/QueryPage/index.js",["78","79","80"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/UsersList.js",["81","82"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/index.js",[],["83","84"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Form.js",["85"],"import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { CREATE_USER_AND_LOGIN } from \"../graphql/actions/createUser\";\n\nconst Form = () => {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [createUser] = useMutation(CREATE_USER_AND_LOGIN);\n\n  const handleSubmiit = async (name, password) => {\n    console.log(name, password);\n    const response = await createUser({\n      variables: { name: name, password: password },\n    });\n\n    console.log(\"response data  : \", response.data);\n    if (response.data.login) {\n      localStorage.setItem(\"@gql-demo-token\", response.data.login);\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <input\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        placeholder=\"Name\"\n        type=\"text\"\n      />\n      <input\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        placeholder=\"Password\"\n        type=\"password\"\n      />\n      <button\n        onClick={() => handleSubmiit(name, password)}\n        className=\"appButton\"\n      >\n        Create user\n      </button>\n    </div>\n  );\n};\n\nexport default Form;\n","/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/CreatePostForm.js",["86","87"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getPost.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/login.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Login.js",["88","89","90"],"import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { LOGIN_USER } from \"../graphql/actions/login.js\";\n\nconst useForceUpdate = () => useState()[1];\n\nconst LoginForm = () => {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginUser, { client }] = useMutation(LOGIN_USER);\n  const forceUpdate = useForceUpdate();\n\n  const handleClick = async (name, password) => {\n    const response = await loginUser({\n      variables: { name: name, password: password },\n    });\n    if (response.data.login) {\n      console.log(\"Token : \", response.data.login);\n      localStorage.setItem(\"@gql-demo-token\", response.data.login);\n      window.location.reload();\n    } else {\n      console.log(\"UNATHORIZED\");\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <input\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        placeholder=\"Name\"\n      />\n      <input\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        placeholder=\"Password\"\n        type=\"Password\"\n      />\n      <button onClick={() => handleClick(name, password)} className=\"appButton\">\n        Log in\n      </button>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/index.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/App.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Pages/MutationsPage/index.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/GetUserForm.js",["91","92"],"/Users/ss/Desktop/work/gql-tech-talk-client/src/reportWebVitals.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/getUser.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/PostPreview.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Post.js",[],"/Users/ss/Desktop/work/gql-tech-talk-client/src/Components/Header.js",["93"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { GET_USER_BY_TOKEN } from \"../graphql/actions/getUserByToken\";\n\nconst Header = ({ path, title }) => {\n  const { loading, error, data } = useQuery(GET_USER_BY_TOKEN, {\n    variables: { token: localStorage.getItem(\"@gql-demo-token\") },\n  });\n\n  useEffect(() => {\n    console.log(\"Data : \", data);\n  }, [data]);\n\n  return (\n    <header className=\"header\">\n      <Link to={path}>{title}</Link>\n      {!data || loading ? (\n        <span>Need to log in </span>\n      ) : (\n        <span>Logged in as : {data.getUserByToken.name}</span>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/ss/Desktop/work/gql-tech-talk-client/src/graphql/actions/createUser.js",[],{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":15,"column":26,"nodeType":"96","messageId":"97","endLine":15,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":23,"column":6,"nodeType":"101","endLine":23,"endColumn":20,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"103","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"104","line":7,"column":20,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"94","severity":1,"message":"103","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"103","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"109","line":9,"column":24,"nodeType":"96","messageId":"97","endLine":9,"endColumn":30},{"ruleId":"94","severity":1,"message":"103","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"109","line":11,"column":23,"nodeType":"96","messageId":"97","endLine":11,"endColumn":29},{"ruleId":"94","severity":1,"message":"110","line":12,"column":9,"nodeType":"96","messageId":"97","endLine":12,"endColumn":20},{"ruleId":"94","severity":1,"message":"104","line":8,"column":30,"nodeType":"96","messageId":"97","endLine":8,"endColumn":35},{"ruleId":"99","severity":1,"message":"111","line":18,"column":6,"nodeType":"101","endLine":18,"endColumn":20,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"104","line":8,"column":20,"nodeType":"96","messageId":"97","endLine":8,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'called' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPostData'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'useEffect' is defined but never used.","'error' is assigned a value but never used.","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"'client' is assigned a value but never used.","'forceUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["116"],{"desc":"117","fix":"118"},"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [loadPostData, selectedPost]",{"range":"121","text":"122"},"Update the dependencies array to be: [getUser, selectedUser]",{"range":"123","text":"124"},[750,764],"[loadPostData, selectedPost]",[562,576],"[getUser, selectedUser]"]